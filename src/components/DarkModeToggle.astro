<!-- is an anchor tag with a button role to get around an inability to justify the text contents of a button -->
<a
  role="button"
  tabindex="0"
  class="dark-mode-button"
  data-cursor-color="var(--opposite-mode-background)"
  data-cursor-size="x-large"
>
  mode</a
>

<style>
  .dark-mode-button::before {
    content: "dark";
    display: inline;
  }
  :root.dark .dark-mode-button::before {
    content: "light";
  }
</style>

<script>
  const darkModeButton = document.querySelector<HTMLAnchorElement>(".dark-mode-button");
  const favicon = document.querySelector<HTMLLinkElement>(
    "link[rel=icon][type='image/svg+xml']"
  );
  const baseColor = document.documentElement.style.getPropertyValue("--base-color");

  const onDarkModeChange = (updateLocalStorage?: boolean) => {
    const isDark = document.documentElement.classList.contains("dark");
    if (favicon)
      favicon.href = `data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Crect fill='hsl(${encodeURIComponent(
        baseColor
      )}, ${isDark ? 10 : 90}%25)' x='0' y='0' width='32' height='32'%3E%3C/rect%3E%3C/svg%3E`;

    if (updateLocalStorage) localStorage.setItem("darkMode", isDark ? "1" : "0");
  };

  onDarkModeChange();

  darkModeButton.addEventListener("click", e => {
    e.preventDefault();
    document.documentElement.classList.toggle("dark");
    onDarkModeChange(true);
  });

  // Because the toggle is an achor element (for styling reasons), we must re-implement keyboard events
  darkModeButton.addEventListener("keydown", e => {
    if (e.key === " " || e.key === "Enter") {
      e.preventDefault();
      darkModeButton.click();
    }
  });
</script>
